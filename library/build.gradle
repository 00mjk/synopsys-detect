plugins {
    //id 'java'
    //id 'maven'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id "com.jfrog.artifactory" //version "4.10.0"
}

apply plugin: 'com.synopsys.integration.simple'
//apply plugin: 'io.spring.dependency-management'

/////////////////////////////
// Common to all subprojects
license {
    header rootProject.file('LICENSE')
}
/////////////////////////////


repositories {
    jcenter()
    maven {
        url "https://mvnrepository.com/artifact/org.springframework.boot/spring-boot"
    }
}

dependencies {
    implementation rootProject

    implementation project(':configuration')
    implementation project(':detectable')
    implementation project(':detector')
    implementation project(':polaris')

    // NEED TO SEPARATE SPRING-NESS OUT OF APPLICATION
    implementation project(':application')

    // this gets it into the pom, but need to exclude in shadowJar to keep it out of .jar
    shadow 'org.slf4j:slf4j-api:1.7.30'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'ch.qos.logback:logback-classic:1.2.3'

    //shadow 'com.synopsys.integration:integration-common:24.0.0'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'com.synopsys.integration:integration-common'

    //shadow 'ch.qos.logback:logback-classic'
    //shadow 'com.synopsys.integration:blackduck-common'
    //shadow 'com.esotericsoftware.yamlbeans:yamlbeans'

    //shadow 'ch.qos.logback:logback-classic:1.2.3'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'com.esotericsoftware.yamlbeans:yamlbeans:1.11'

    // Mostly works; just some metadata is written to .jar
    shadow 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'

    // This works perfectly (not in .jar; is in .pom)
    shadow "com.synopsys.integration:blackduck-common:${blackDuckCommonVersion}"
    // This works perfectly (not in .jar; is in .pom)
    shadow 'com.synopsys:method-analyzer-core:0.1.0'
    //shadow 'com.esotericsoftware.yamlbeans:yamlbeans:1.11'
    //shadow 'com.synopsys:method-analyzer-core'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'org.apache.maven.shared:maven-invoker:3.0.0'
    //shadow 'org.apache.maven.shared:maven-invoker'

    // TBD get this from ${springBootVersion}
    // changing this line to shadow breaks build:
    implementation group: 'org.springframework.boot', name: 'spring-boot', version: '2.2.4.RELEASE'

    // This works perfectly (not in .jar; is in .pom)
    shadow group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: '2.2.4.RELEASE'
    //implementation('org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE')


    //////////////////////////////////////////////////////////////////////////////////////////////////////
    // DAMN. Some of these are transitives, and I actually don't need them in the pom. I've overdone this.
    //////////////////////////////////////////////////////////////////////////////////////////////////////

    // This is working with the exclude in shadowJar
    shadow 'org.yaml:snakeyaml:1.24'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'org.zeroturnaround:zt-zip:1.13'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'org.freemarker:freemarker:2.3.26-incubating'

    // This works perfectly (not in .jar; is in .pom)
    shadow 'org.apache.commons:commons-lang3:3.10'

    shadow 'org.apache.commons:commons-text:1.9'


    /////////////////////////////
    // Common to all subprojects
    //implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.apache.commons:commons-lang3:3.10" /* this could be managed by blackduck common */
    implementation 'org.jetbrains:annotations:19.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testImplementation 'org.mockito:mockito-core:2.+'
    /////////////////////////////

}


shadowJar {
   dependencies {
      // This is necessary to keep this dep out of the .jar (and it works) 
      exclude(dependency('org.yaml:snakeyaml'))

      // This is necessary to keep this dep out of the .jar (and it works) 
      exclude(dependency('org.freemarker:freemarker'))


      // This excludes these from the shadow .jar
      // TBD do these show up as transitive dependencies in the pom??
      // slf4j does not

      // This is necessary to keep this dep out of the .jar (and it works) 
      exclude(dependency('org.slf4j:slf4j-api'))

      ///////exclude(dependency('org.apache.commons:commons-text'))

      // This is necessary to keep this dep out of the .jar (and it works) 
      exclude(dependency('org.apache.commons:commons-lang3'))
   }
   classifier = null
   // This renames both the .jar and the .pom
   archiveBaseName.set('synopsys-detect-lib')
}

build.dependsOn shadowJar

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            from project.shadow.component(publication)
            artifactId = 'synopsys-detect-lib'
        }
    }
}

