import java.io.File

final String buildArtifactFolder = "${buildDir}/libs"
final String airGapFolder = "${buildArtifactFolder}/airgap"
final String gradleAirGapPath = "${airGapFolder}/gradle/"
final String nugetAirGapPath = "${airGapFolder}/nuget/"
final String configAirGapPath = "${buildArtifactFolder}/config/"
final String dockerAirGapPath = "${airGapFolder}/docker/"

configurations {
    airGap
}

dependencies {
    airGap "com.blackducksoftware.integration:integration-gradle-inspector:+"
}

void fetchFile(File outputFile, String url) {
    if (outputFile.exists()) {
        return
    }
    if (!outputFile.getParentFile().exists()) {
        outputFile.getParentFile().mkdirs()
    }
    new URL(url).withInputStream{ i -> outputFile.withOutputStream{ it << i }}
}

task downloadNugetInspector {
    doLast {
        final def nugetInspectorUrl = "https://www.nuget.org/api/v2/package/IntegrationNugetInspector/"
        fetchFile(new File(nugetAirGapPath, "integrationnugetinspector.nupkg"), nugetInspectorUrl)
    }
}

task copyGradleInspectorAndDependencies(type: Copy) {
    from configurations.airGap
    include '*.jar'
    into gradleAirGapPath
}

task copyApplicationProperties(type: Copy) {
    from 'src/main/resources/'
    include 'application.properties'
    into configAirGapPath
}

task downloadDockerImages() {
    doLast {
        def dir = new File(dockerAirGapPath)
        dir.mkdir()
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-ubuntu:3.0.0"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-ubuntu.tar", "blackducksoftware/hub-docker-inspector-ubuntu:3.0.0"
        }
        
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-centos:3.0.0"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-centos.tar", "blackducksoftware/hub-docker-inspector-centos:3.0.0"
        }
        
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-alpine:3.0.0"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-alpine.tar", "blackducksoftware/hub-docker-inspector-alpine:3.0.0"
        }
    }
}

task downloadDockerInspector() {
    dependsOn downloadDockerImages
    doLast {
        final def dockerInspectorJarUrl = "https://blackducksoftware.github.io/hub-docker-inspector/hub-docker-inspector-3.0.0.jar"
        fetchFile(new File(dockerAirGapPath, "hub-docker-inspector.jar"), dockerInspectorJarUrl)
        final def dockerInspectorScriptUrl = "https://blackducksoftware.github.io/hub-docker-inspector/hub-docker-inspector-3.0.0.sh"
        fetchFile(new File(dockerAirGapPath, "hub-docker-inspector.sh"), dockerInspectorScriptUrl)
    }
}

task createAirGapZip(type: Zip) {
    dependsOn build, copyApplicationProperties, downloadNugetInspector, copyGradleInspectorAndDependencies, downloadDockerInspector
    from buildArtifactFolder
    include "${rootProject.name}-${version}.jar"
    include 'airgap/*/*'
    include 'config/*'
    archiveName "${rootProject.name}-${version}-air-gap.zip"
    destinationDir(file(buildArtifactFolder))
}