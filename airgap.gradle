import java.io.File

final String buildArtifactFolder = "${buildDir}/libs"
final String airGapFolder = "${buildArtifactFolder}/packaged-inspectors"
final String gradleAirGapPath = "${airGapFolder}/gradle"
final String nugetAirGapPath = "${airGapFolder}/nuget"
final String configAirGapPath = "${buildArtifactFolder}/config"
final String dockerAirGapPath = "${airGapFolder}/docker"

configurations {
    airGap
}

dependencies {
    airGap "com.blackducksoftware.integration:integration-gradle-inspector:latest.release"
}

void fetchFile(File outputFile, String url) {
    if (outputFile.exists()) {
        return
    }
    if (!outputFile.getParentFile().exists()) {
        outputFile.getParentFile().mkdirs()
    }
    new URL(url).withInputStream{ i -> outputFile.withOutputStream{ it << i }}
}

task downloadNugetInspector {
    doLast {
        final def nugetInspectorUrl = "https://www.nuget.org/api/v2/package/IntegrationNugetInspector/"
        fetchFile(new File(nugetAirGapPath, "integrationnugetinspector.nupkg"), nugetInspectorUrl)
    }
}

task downloadGradleInspectorMavenMetadata {
    doLast {
        final def gradleInspectorMavenMetadataUrl = "http://repo2.maven.org/maven2/com/blackducksoftware/integration/integration-gradle-inspector/maven-metadata.xml"
        fetchFile(new File(gradleAirGapPath, "maven-metadata.xml"), gradleInspectorMavenMetadataUrl)
    }
}

task copyGradleInspectorAndDependencies(type: Copy) {
    from configurations.airGap
    include '*.jar'
    into gradleAirGapPath
}

task copyApplicationProperties(type: Copy) {
    from 'src/main/resources/'
    include 'application.properties'
    into configAirGapPath
}

task downloadDockerImages() {
    doLast {
        def dir = new File(dockerAirGapPath)
        dir.mkdir()
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-ubuntu:latest"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-ubuntu.tar", "blackducksoftware/hub-docker-inspector-ubuntu:latest"
        }
        
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-centos:latest"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-centos.tar", "blackducksoftware/hub-docker-inspector-centos:latest"
        }
        
        exec {
            commandLine "docker", "pull", "blackducksoftware/hub-docker-inspector-alpine:latest"
        }
        exec {
            commandLine "docker", "save", "-o", "${dockerAirGapPath}/hub-docker-inspector-alpine.tar", "blackducksoftware/hub-docker-inspector-alpine:latest"
        }
    }
}

task downloadDockerInspectorScript() {
    doLast{
        def dockerInspectorScript = new File(dockerAirGapPath, "hub-docker-inspector.sh")
        final def dockerInspectorScriptUrl = "https://blackducksoftware.github.io/hub-docker-inspector/hub-docker-inspector.sh"
        fetchFile(dockerInspectorScript, dockerInspectorScriptUrl)              
        dockerInspectorScript.setExecutable(true)
    }
}

task downloadDockerInspector() {
    dependsOn downloadDockerImages, downloadDockerInspectorScript
    doLast{
        exec{
            commandLine "bash", "${dockerAirGapPath}/hub-docker-inspector.sh", "--pulljar"
        }
        copy{
            from '.'
            include 'hub-docker-inspector-*.jar'
            into dockerAirGapPath
        }
        delete fileTree('.'){
            include 'hub-docker-inspector-*.jar'
        }
    }
}

task createAirGapZip(type: Zip) {
    dependsOn build, copyApplicationProperties, downloadNugetInspector, copyGradleInspectorAndDependencies, downloadDockerInspector
    from buildArtifactFolder
    include "${rootProject.name}-${version}.jar"
    include 'packaged-inspectors/*/*'
    include 'config/*'
    archiveName "${rootProject.name}-${version}-air-gap.zip"
    destinationDir(file(buildArtifactFolder))
}