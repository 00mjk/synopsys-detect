import java.nio.charset.StandardCharsets

import org.gradle.api.Task
import org.gradle.api.execution.TaskExecutionListener
import org.gradle.api.tasks.TaskState

import com.blackducksoftware.integration.gradle.DependencyGatherer

initscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.blackducksoftware.integration:integration-gradle-inspector:GRADLE_INSPECTOR_VERSION'
    }
}

addListener(
        new TaskExecutionListener() {
            boolean executed = false;

            void beforeExecute(Task task) { }
            void afterExecute(Task task, TaskState state) {
                if (executed) {
                    return
                } else {
                    executed = true
                }

                File outputDirectory = new File(task.project.buildDir, 'blackduck')
                outputDirectory.mkdirs()
               
                def dependencyGatherer = new DependencyGatherer()
                def rootProject = task.project
                dependencyGatherer.createAllProjectDependencyFiles(rootProject, 'EXCLUDED_PROJECT_NAMES', 'INCLUDED_PROJECT_NAMES', 'EXCLUDED_CONFIGURATION_NAMES', 'INCLUDED_CONFIGURATION_NAMES', outputDirectory)

                File projectInfoFile = new File(outputDirectory, "ProjectInfo.txt")
                projectInfoFile.write("${rootProject.name.toString()}${System.getProperty('line.separator')}${rootProject.version.toString()}")
           }
       })