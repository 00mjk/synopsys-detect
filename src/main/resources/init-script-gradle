import java.nio.charset.StandardCharsets

import org.gradle.api.Task
import org.gradle.api.execution.TaskExecutionListener
import org.gradle.api.tasks.TaskState

import com.google.gson.GsonBuilder
import com.google.gson.stream.JsonWriter

import com.blackducksoftware.integration.gradle.DependencyGatherer
import com.blackducksoftware.integration.hub.bdio.simple.model.DependencyNode

initscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.blackducksoftware.integration:integration-gradle-inspector:0.0.6'
        classpath 'com.google.code.gson:gson:2.7'
    }
}

addListener(
        new TaskExecutionListener() {
            boolean executed = false;

            void beforeExecute(Task task) { }
            void afterExecute(Task task, TaskState state) {
                if (executed) {
                    return
                } else {
                    executed = true
                }

                def dependencyGatherer = new DependencyGatherer()
                DependencyNode rootProjectDependencyNode = dependencyGatherer.getFullyPopulatedRootNode(task.project, 'EXCLUDED_PROJECT_NAMES', 'INCLUDED_PROJECT_NAMES', 'EXCLUDED_CONFIGURATION_NAMES', 'INCLUDED_CONFIGURATION_NAMES')
                File outputDirectory = new File(task.project.buildDir, 'blackduck')
                outputDirectory.mkdirs()
                File outputFile = new File(outputDirectory, 'dependencyNodes.json')
                if (outputFile.exists()) {
                    outputFile.delete()
                }
                outputFile << new GsonBuilder().setPrettyPrinting().create().toJson(rootProjectDependencyNode)
            }
        })